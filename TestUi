local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local MyUI = {}

MyUI.Color = Color3.fromRGB(255, 50, 50)
MyUI.WindowName = "My Hub X"
MyUI.WindowColor = Color3.fromRGB(25, 25, 25)

function MyUI:CreateWindow(Config)
    local WindowTitle = Config.Name or MyUI.WindowName
    local TitleColor = Config.Color or MyUI.Color

    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "MyUIHub"
    ScreenGui.Parent = game:GetService("CoreGui")

    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, 500, 0, 400)
    MainFrame.Position = UDim2.new(0.5, -250, 0.5, -200)
    MainFrame.BackgroundColor3 = MyUI.WindowColor
    MainFrame.Active = true
    MainFrame.Draggable = true
    MainFrame.Parent = ScreenGui

    local UICorner = Instance.new("UICorner", MainFrame)
    UICorner.CornerRadius = UDim.new(0, 8)

    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Text = WindowTitle
    TitleLabel.Size = UDim2.new(1, 0, 0, 40)
    TitleLabel.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
    TitleLabel.TextColor3 = TitleColor
    TitleLabel.Font = Enum.Font.GothamBold
    TitleLabel.TextSize = 20
    TitleLabel.Parent = MainFrame

    local Container = Instance.new("ScrollingFrame")
    Container.Position = UDim2.new(0, 0, 0, 40)
    Container.Size = UDim2.new(1, 0, 1, -40)
    Container.BackgroundTransparency = 1
    Container.CanvasSize = UDim2.new(0, 0, 0, 0)
    Container.ScrollBarThickness = 6
    Container.Parent = MainFrame

    local ListLayout = Instance.new("UIListLayout")
    ListLayout.Padding = UDim.new(0, 6)
    ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    ListLayout.Parent = Container

    local function UpdateCanvas()
        task.wait()
        Container.CanvasSize = UDim2.new(0, 0, 0, ListLayout.AbsoluteContentSize.Y + 10)
    end

    ListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(UpdateCanvas)

    local Elements = {}

    function Elements:CreateLabel(Text)
        local Label = Instance.new("TextLabel")
        Label.Text = Text
        Label.Size = UDim2.new(1, -10, 0, 25)
        Label.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
        Label.TextColor3 = Color3.new(1, 1, 1)
        Label.Font = Enum.Font.Gotham
        Label.TextSize = 14
        Label.Parent = Container
    end

    function Elements:CreateButton(Text, Callback)
        local Button = Instance.new("TextButton")
        Button.Text = Text
        Button.Size = UDim2.new(1, -10, 0, 30)
        Button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        Button.TextColor3 = Color3.new(1, 1, 1)
        Button.Font = Enum.Font.Gotham
        Button.TextSize = 14
        Button.Parent = Container

        Button.MouseButton1Click:Connect(function()
            pcall(Callback)
        end)
    end

    function Elements:CreateToggle(Text, Callback)
        local Toggle = Instance.new("TextButton")
        Toggle.Text = "[ OFF ] " .. Text
        Toggle.Size = UDim2.new(1, -10, 0, 30)
        Toggle.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        Toggle.TextColor3 = Color3.new(1, 1, 1)
        Toggle.Font = Enum.Font.Gotham
        Toggle.TextSize = 14
        Toggle.Parent = Container

        local State = false

        Toggle.MouseButton1Click:Connect(function()
            State = not State
            Toggle.Text = (State and "[ ON ] " or "[ OFF ] ") .. Text
            pcall(Callback, State)
        end)
    end

    function Elements:CreateTextbox(Placeholder, Callback)
        local Box = Instance.new("TextBox")
        Box.PlaceholderText = Placeholder
        Box.Size = UDim2.new(1, -10, 0, 30)
        Box.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        Box.TextColor3 = Color3.new(1, 1, 1)
        Box.Font = Enum.Font.Gotham
        Box.TextSize = 14
        Box.Parent = Container

        Box.FocusLost:Connect(function()
            pcall(Callback, Box.Text)
        end)
    end

    function Elements:CreateDropdown(Name, Options, Callback)
        local Holder = Instance.new("Frame")
        Holder.Size = UDim2.new(1, -10, 0, 30)
        Holder.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        Holder.Parent = Container

        local Button = Instance.new("TextButton")
        Button.Text = "[ + ] " .. Name
        Button.Size = UDim2.new(1, 0, 1, 0)
        Button.BackgroundTransparency = 1
        Button.TextColor3 = Color3.new(1, 1, 1)
        Button.Font = Enum.Font.Gotham
        Button.TextSize = 14
        Button.Parent = Holder

        local Opened = false

        Button.MouseButton1Click:Connect(function()
            Opened = not Opened
            Button.Text = (Opened and "[ - ] " or "[ + ] ") .. Name
            for _, v in pairs(Holder:GetChildren()) do
                if v:IsA("TextButton") and v.Name ~= "MainButton" then
                    v.Visible = Opened
                end
            end
        end)

        Button.Name = "MainButton"

        for i, v in pairs(Options) do
            local Option = Instance.new("TextButton")
            Option.Text = v
            Option.Size = UDim2.new(1, 0, 0, 25)
            Option.Position = UDim2.new(0, 0, 1, (i - 1) * 25)
            Option.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
            Option.TextColor3 = Color3.new(1, 1, 1)
            Option.Font = Enum.Font.Gotham
            Option.TextSize = 14
            Option.Parent = Holder
            Option.Visible = false

            Option.MouseButton1Click:Connect(function()
                pcall(Callback, v)
            end)
        end
    end

    function Elements:CreateSlider(Text, Min, Max, Default, Callback)
        local SliderFrame = Instance.new("Frame")
        SliderFrame.Size = UDim2.new(1, -10, 0, 40)
        SliderFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        SliderFrame.Parent = Container

        local Label = Instance.new("TextLabel")
        Label.Text = Text .. ": " .. tostring(Default)
        Label.Size = UDim2.new(1, 0, 0, 20)
        Label.BackgroundTransparency = 1
        Label.TextColor3 = Color3.new(1, 1, 1)
        Label.Font = Enum.Font.Gotham
        Label.TextSize = 14
        Label.Parent = SliderFrame

        local Slider = Instance.new("TextButton")
        Slider.Size = UDim2.new(1, 0, 0, 15)
        Slider.Position = UDim2.new(0, 0, 0, 25)
        Slider.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
        Slider.Text = ""
        Slider.Parent = SliderFrame

        local Value = Default

        Slider.MouseButton1Down:Connect(function()
            local Conn
            Conn = UserInputService.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement then
                    local pos = math.clamp((input.Position.X - Slider.AbsolutePosition.X) / Slider.AbsoluteSize.X, 0, 1)
                    Value = math.floor((Min + (Max - Min) * pos) + 0.5)
                    Label.Text = Text .. ": " .. tostring(Value)
                    pcall(Callback, Value)
                end
            end)

            UserInputService.InputEnded:Wait()
            Conn:Disconnect()
        end)
    end

    return Elements
end

return MyUI
